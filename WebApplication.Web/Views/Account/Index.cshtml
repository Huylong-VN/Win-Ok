@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Users";
    Layout = "~/Views/Shared/_Layout_admin.cshtml";
    ViewData["head-title"] = "Management User";
}
@section Scripts{
    <script>
        let curruntUserPage = 1;
        function getAllUser(filter, page) {
            curruntUserPage = page;
            $.ajax({
                url: "https://localhost:5001/api/Users?SkipCount=" + page + "&MaxResultCount=10&Filter=n",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Authorization", "Bearer " + user.accessToken);
                },
                type: "GET",
                success: response => {
                    renderPagination(response.totalCount, page);
                    let html = "";
                    for (let data of response.items) {
                        html += `<tr>
                                                                            <th scope="row">`+ data.userName + `</th>
                                                                                                           <td>`+ data.fullName + `</td>
                                                                                                           <td>`+ data.email + `</td>
                                                                                                           <td>`+ data.phoneNumber + `</td>
                                                                                                            <td class='action-center' scope="col">
                                                                                                            <div class="btn-group">
                                                                                                                <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                                                                                                    Action
                                                                                                                </button>
                                                                                                                <div class="dropdown-menu">
                                                                                                                    <a class="dropdown-item" onclick='showModalUpdate(${JSON.stringify(data)})'>Update</a>
                                                                                                                    <a class="dropdown-item" onclick='deleteTopic(${JSON.stringify(data.id)})'>Delete</a>
                                                                                                                    <a class="dropdown-item" onclick='roleAssignModal(${JSON.stringify(data.id)})'>Roles Assign</a>
                                                                                                                    <a class="dropdown-item" onclick='classAssign(${JSON.stringify(data.id)})' href="#">Class Assign</a>
                                                                                                                    <a class="dropdown-item" onclick='courseAssign(${JSON.stringify(data.id)})'>Course Assign</a>
                                                                                                                </div>
                                                                                                            </div>
                                                                                                           </td>
                                                                                                           </tr>`;

                    }
                    $("#body-user").html(html);
                    $("#spinLoaded").hide();
                    $("#tableuser").removeClass("d-none");
                }
            })
        }
        let maxClass = 10;
        let userClassAssignId;
        function classAssign(id) {
            userClassAssignId = id;
            $("#classAssign").modal("show");
            getListClass(maxClass);
        }
        function getMore() {
            maxClass += 5;
            getListClass(maxClass);
        }
        let roleAssignUserId;
        function getListClass(max) {
            maxClass = max;
            $.ajax({
                url: "https://localhost:5001/api/Classes?MaxResultCount=" + maxClass,
                type: "GET",
                success: datas => {
                    let htm = "<option selected value='1'>Choice one Class</option>";
                    for (let i of datas.items) {
                        if (i.user.length > 0) {
                            for (let j = 0; j < i.user.length; j++) {
                                if (i.user[j].id == userClassAssignId) {
                                    htm += `<option style="background:red" disabled value='` + i.id + `'>Class ->> ` + i.name + ` on this user did join </option>`;
                                    break;
                                }
                                else {
                                    if (j == i.user.length - 1) {
                                        htm += `<option value='` + i.id + `'>Join Now -> ` + i.name + `</option>`;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            htm += `<option value='` + i.id + `'>Join Now -> ` + i.name + `</option>`;
                        }

                    }
                    $("#selectClass").html(htm);
                }
            })
        }
        function assignUser() {
            if (userClassAssignId != null && $("#selectClass").val() != 1) {
                $.ajax({
                    url: "https://localhost:5001/api/Users/ClassAssign",
                    type: "POST",
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify({ "userId": userClassAssignId, "classId": $("#selectClass").val() }),
                    success: datas => {
                        swal({
                            title: "Assign Success",
                            text: "Hihi!",
                            icon: "success",
                            type: "OK"
                        });
                        getListClass(maxClass);
                    }
                })
            }
            else {
                swal({
                    title: "Plss check again !!",
                    text: "Hihi!",
                    icon: "success",
                    type: "OK"
                })
            }

        }
        //Course Assign
        let maxCourse = 10;
        let userCourseAssignId;
        function courseAssign(id) {
            userCourseAssignId = id;
            $("#courseAssign").modal("show");
            getListCourses(maxCourse);
        }
        function getMoreCourse() {
            maxCourse += 5;
            getListCourses(maxCourse);
        }
        function getListCourses(max) {
            maxCourse = max;
            $.ajax({
                url: "https://localhost:5001/api/Courses?MaxResultCount" + maxCourse,
                type: "GET",
                success: datas => {
                    console.log(datas)
                    let htm = "<option selected value='1'>Choice one Course</option>";
                    for (let i of datas.items) {
                        if (i.user.length > 0) {
                            for (let j = 0; j < i.user.length; j++) {
                                if (i.user[j].id == userCourseAssignId) {
                                    htm += `<option style="background:red" disabled value='` + i.id + `'>Course ->> ` + i.name + ` on this user did join </option>`;
                                    break;
                                }
                                else {
                                    if (j == i.user.length - 1) {
                                        htm += `<option value='` + i.id + `'>Join Now -> ` + i.name + `</option>`;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            htm += `<option value='` + i.id + `'>Join Now -> ` + i.name + `</option>`;
                        }

                    }
                    $("#selectCourse").html(htm);
                }
            })
        }
        function assignUserCourse() {
            if (userCourseAssignId != null && $("#selectCourse").val() != 1) {
                $.ajax({
                    url: "https://localhost:5001/api/Users/CourseAssign",
                    type: "POST",
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify({ "userId": userCourseAssignId, "courseId": $("#selectCourse").val() }),
                    success: datas => {
                        swal({
                            title: "Assign Success",
                            text: "Hihi!",
                            icon: "success",
                            type: "OK"
                        });
                        getListCourses(maxCourse);
                    }
                })
            }
            else {
                swal({
                    title: "Plss check again !!",
                    text: "Hihi!",
                    icon: "success",
                    type: "OK"
                })
            }

        }
        //

        function roleAssignModal(data) {
            roleAssignUserId = data;
            $("#roleAssign").modal("show");
            $.ajax({
                url: "https://localhost:5001/api/Users/GetListRole",
                type: "GET",
                success: datas => {
                    let html = "";
                    for (let i of datas) {
                        if (i.users.length > 0) {
                            for (let j = 0; j < i.users.length; j++) {
                                if (i.users[j].id == roleAssignUserId) {
                                    html += `<div class="form-check form-check-inline">
                                                      <input class="form-check-input listRole-input" id="${i.name}" type="checkbox" value="${i.id}" checked>
                                                      <label class="form-check-label" for="inlineCheckbox1">${i.name}</label>
                                                    </div>`;
                                    break;
                                }
                                else {
                                    if (j == i.users.length - 1) {
                                        html += `<div class="form-check form-check-inline">
                                                      <input class="form-check-input listRole-input" id="${i.name}" type="checkbox" value="${i.id}">
                                                      <label class="form-check-label" for="inlineCheckbox1">${i.name}</label>
                                                    </div>`;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            html += `<div class="form-check form-check-inline">
                                                      <input class="form-check-input listRole-input" id="${i.name}" type="checkbox" value="${i.id}">
                                                      <label class="form-check-label" for="inlineCheckbox1">${i.name}</label>
                                                    </div>`;
                        }
                    }
                    $("#listrole").html(html);
                }
            })
        }

        function getListCourse(max) {
            maxClass = max;
            $.ajax({
                url: "https://localhost:5001/api/Courses?MaxResultCount=" + maxClass,
                type: "GET",
                success: datas => {
                    let htm = "<option selected value='1'>Choice one Course</option>";
                    for (let i of datas.items) {
                        if (i.user.length > 0) {
                            for (let j = 0; j < i.user.length; j++) {
                                if (i.user[j].id == userClassAssignId) {
                                    htm += `<option style="background:red" disabled value='` + i.id + `'>Join Now ->> ` + i.name + ` (Did join) </option>`;
                                    break;
                                }
                                else {
                                    if (j == i.user.length - 1) {
                                        htm += `<option value='` + i.id + `'>Join Now ->> ` + i.name + `</option>`;
                                        break;
                                    }
                                }
                            }
                        }
                        else {
                            htm += `<option value='` + i.id + `'>Join Now ->> ` + i.name + `</option>`;
                        }

                    }
                    $("#selectClass").html(htm);
                }
            })
        }
        getAllUser('', curruntUserPage);
        function AssignUserApi() {
            const listRoleInput = $(".listRole-input");
            let roles = { id: roleAssignUserId, Roles: [] };
            for (var i = 0; i < listRoleInput.length; i++) {
                roles.Roles.push({
                    "id": listRoleInput.eq(i).attr("value"),
                    "name": listRoleInput.eq(i).attr("id"),
                    "selected": listRoleInput.eq(i).is(":checked")
                })
            }
            if (roles.Roles != null && roles.id!=null) {
                $.ajax({
                    url: "https://localhost:5001/api/users/roles",
                    type: "PUT",
                    contentType: 'application/json; charset=UTF-8',
                    data: JSON.stringify(roles),
                    success: () => {
                        swal({
                            title: "Assign Success",
                            text: "Hihi!",
                            icon: "success",
                            type: "OK"
                        });
                    }
                })
            }
        }
    </script>
}
<h2 onclick="getListCourse(true)" data-toggle="modal" data-target="#createModal">Create</h2>
<div class="justify-content-center" style="display:flex" id="spinLoaded">
    <div class="spinner-border text-success " role="status">
        <span class="sr-only">Loading...</span>
    </div>
</div>
<table id="tableuser" class="d-none table table-striped table-hover">
    <thead style=" background: rebeccapurple;">
        <tr>
            <th scope="col">User Name</th>
            <th scope="col">Full Name</th>
            <th scope="col">Email</th>
            <th scope="col">Phone</th>
            <th scope="col" class="text-center">Action</th>
        </tr>
    </thead>
    <tbody id="body-user">
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination" id="paginationTopic">
    </ul>
</nav>

<div class="modal fade" id="classAssign" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modallabelTopic">Class Assign</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <select id="selectClass" class="form-control form-control-sm">
                </select>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <button class="btn btn-primary" id="classAssign" onclick="assignUser()" type="button">Assign</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="courseAssign" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modallabelTopic">Course Assign</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>


                </button>
            </div>
            <div class="modal-body">
                <select id="selectCourse" class="form-control form-control-sm">
                </select>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <button class="btn btn-primary" id="courseAssign" onclick="assignUserCourse()" type="button">Assign</button>
            </div>
        </div>
    </div>
</div>


<div class="modal fade" id="roleAssign" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
     aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modallabelTopic">Role Assign</h5>
                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body" id="listrole">
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                <button class="btn btn-primary" id="classAssign" onclick="AssignUserApi()" type="button">Assign</button>
            </div>
        </div>
    </div>
</div>